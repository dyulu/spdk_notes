
==== User Space Drivers

https://spdk.io/doc/userspace.html
https://github.com/spdk/spdk/blob/master/scripts/setup.sh                            # linux_bind_driver()

# Manual driver binding and unbinding: https://lwn.net/Articles/143397/
$ tree /sys/bus/pci/drivers/nvme 
/sys/bus/pci/drivers/nvme
├── 0000:18:00.0 -> ../../../../devices/pci0000:17/0000:17:00.0/0000:18:00.0
├── 0000:1a:00.0 -> ../../../../devices/pci0000:17/0000:17:01.0/0000:1a:00.0
├── bind
├── module -> ../../../../module/nvme
├── new_id
├── remove_id
├── uevent
└── unbind
$ ls -lart /sys/devices/pci0000:17/0000:17:00.0/0000:18:00.0 | grep driver
-rw-r--r-- 1 root root   4096 Oct 11 17:20 driver_override
lrwxrwxrwx 1 root root      0 Oct 11 17:27 driver -> ../../../../bus/pci/drivers/nvme  # Device is using driver nvme
$ ls -lart /sys/devices/pci0000:17/0000:17:01.0/0000:1a:00.0 | grep driver
-rw-r--r-- 1 root root   4096 Oct 11 17:29 driver_override
lrwxrwxrwx 1 root root      0 Oct 11 17:29 driver -> ../../../../bus/pci/drivers/nvme  # Device is using driver nvme
$ echo -n "0000:18:00.0" > /sys/bus/pci/drivers/nvme/unbind
$ tree /sys/bus/pci/drivers/nvme 
/sys/bus/pci/drivers/nvme
├── 0000:1a:00.0 -> ../../../../devices/pci0000:17/0000:17:01.0/0000:1a:00.0
├── bind
├── module -> ../../../../module/nvme
├── new_id
├── remove_id
├── uevent
└── unbind
$ ls -lart /sys/devices/pci0000:17/0000:17:00.0/0000:18:00.0 | grep driver
-rw-r--r-- 1 root root   4096 Oct 11 17:20 driver_override                              # No driver symlink any more
$ echo -n "0000:1a:00.0" >> /sys/bus/pci/drivers/nvme/unbind                            # /sys/bus/pci/drivers/nvme/remove_id
$ tree /sys/bus/pci/drivers/nvme
/sys/bus/pci/drivers/nvme
├── bind
├── module -> ../../../../module/nvme
├── new_id
├── remove_id
├── uevent
└── unbind
$ ls -lart /sys/devices/pci0000:17/0000:17:01.0/0000:1a:00.0 | grep driver
-rw-r--r-- 1 root root   4096 Oct 11 17:29 driver_override                              # No driver symlink any more

# Rebind the drivers to one of two special device drivers that come bundled with Linux - uio or vfio.
# Dummy drivers: mostly indicate to the OS that the device has a driver bound to it so it won't automatically try to re-bind the default driver.
# uio: Userspace IO system, https://www.kernel.org/doc/html/latest/driver-api/uio-howto.html
$ modprobe uio
$ modprobe uio_pci_generic
$ lsmod | grep uio
uio_pci_generic        16384  0
uio                    20480  1 uio_pci_generic
$ tree /sys/bus/pci/drivers/uio_pci_generic
/sys/bus/pci/drivers/uio_pci_generic
├── bind
├── module -> ../../../../module/uio_pci_generic
├── new_id
├── remove_id
├── uevent
└── unbind
$ cat /sys/devices/pci0000:17/0000:17:00.0/0000:18:00.0/vendor
0x144d
$ cat /sys/devices/pci0000:17/0000:17:00.0/0000:18:00.0/device
0xa804
$ lspci -n -s 0000:18:00.0
18:00.0 0108: 144d:a804
$ echo -n "0x144d 0xa804" > /sys/bus/pci/drivers/uio_pci_generic/new_id                 # /sys/bus/pci/drivers/uio_pci_generic/bind
$ tree /sys/bus/pci/drivers/uio_pci_generic
/sys/bus/pci/drivers/uio_pci_generic
├── 0000:18:00.0 -> ../../../../devices/pci0000:17/0000:17:00.0/0000:18:00.0
├── 0000:1a:00.0 -> ../../../../devices/pci0000:17/0000:17:01.0/0000:1a:00.0
├── bind
├── module -> ../../../../module/uio_pci_generic
├── new_id
├── remove_id
├── uevent
└── unbind
$ ls -lart /sys/devices/pci0000:17/0000:17:01.0/0000:1a:00.0 | grep driver
-rw-r--r-- 1 root root   4096 Oct 11 17:29 driver_override
lrwxrwxrwx 1 root root      0 Oct 11 17:49 driver -> ../../../../bus/pci/drivers/uio_pci_generic   # Device driver is now uio
$ ls -lart /sys/devices/pci0000:17/0000:17:00.0/0000:18:00.0 | grep driver
-rw-r--r-- 1 root root   4096 Oct 11 17:20 driver_override
lrwxrwxrwx 1 root root      0 Oct 11 17:50 driver -> ../../../../bus/pci/drivers/uio_pci_generic   # Device driver is now uio
$ ls /dev/uio*
/dev/uio0  /dev/uio1
$ ls /sys/class/uio/uio*
/sys/class/uio/uio0:
dev  device  event  name  power  subsystem  uevent  version
/sys/class/uio/uio1:
dev  device  event  name  power  subsystem  uevent  version

# Virtual Function IO: https://www.kernel.org/doc/Documentation/vfio.txt
$ lsmod | grep vfio
$ modprobe vfio-pci
$ lsmod | grep vfio
vfio_pci               65536  0
vfio_virqfd            16384  1 vfio_pci
vfio_iommu_type1       36864  0
vfio                   28672  2 vfio_iommu_type1,vfio_pci
irqbypass              16384  2 vfio_pci,kvm
$ ls /sys/bus/pci/drivers/vfio-pci/
bind  module  new_id  remove_id  uevent  unbind

